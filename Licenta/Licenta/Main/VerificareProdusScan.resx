<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkogAAJOL
        BwCSigUGk4oFJpKKBVGSigR1kooEf5KKBH+SigR1kooFUZOKBSaTiwUGk4wHAJKHAgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAko0CAJaO
        DQCWjgwLlY0LT5SMCaqUjAnjlIwI+pSMCP+Uiwj/lIsI/5SMCP+UjAj6lIwJ45SMCaqVjQtPlY0MC5aO
        DQCUhwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJqS
        EgCHggwAmJASL5ePEKqXjw/1l48P/5ePD/+Xjw//l48P/5ePD/+Xjw//l48P/5ePD/+Xjw//l48P/5eP
        D/WXkBCqmZESL4R5EACbkxEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACmnSAAX1gbAZWOGk6VjhjakosY/5CJGP+PiBn/kYoY/5SNGP+XkBf/mZIX/5qSF/+akxf/mpMX/5qT
        F/+akxf/mpIX/5iRF/+Wjxjai4UbUQwLJQcAACEDAAAPAQAASwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAEAAAAAAAAAEwCOhyRRkIkj5YiDJP+Bfib/f3wn/358J/+AfSf/hYEm/42HI/+WjyH/m5Qg/52W
        IP+elyD/npcg/56WIP+clCD/lo8i/42IJP+JhSfnc3IwXgAAUwsAAEgCAAF8AAAAGAAAAAAAAAAAAAAA
        AAAAAAAAAAAFAAAAAAD//08Ag30xN46JL9yFgS//fXYq/3xrIv9/Zhz/gWUa/39mHv9+cCb/gX0u/4yH
        L/+Ykiz/oJkq/6KbKf+imyn/oZoq/5uUK/+OijD/gnEp/4JkIv+Hbyned3NDPQAA/wEEBrYAAwN5AAAA
        AAAAAAAAAAAAAAAAAAAAACoA//+HAGVhPxGRjDuwioY4/3poJP92UA//fE4M/4ZXEv+LWxT/iVMO/4ZN
        Cf+EWRX/hngv/5WQOv+hmzb/pqA0/6agNP+jnDX/mJM5/4iANf9/OQ7/gSQD/5NwLf+kn0WtmJNVDZ+a
        RQBSVf8AAAAAAAAAAAAAAAAAAAAAABERaQD//0IAk45HV5eURfZ8bSv/a0cM/4JkIv+jlk7/s6xk/7ex
        aP+vplv/nYE1/4lPC/+IWBT/l5BC/6WgQ/+rpD//qaM//6GbQf+UkkT/hl4i/4InAP+PUyD/radV/66p
        TPWtp0ZQrKZDALawYQAAAAAAAAAAAAAAAAAAAAAAoJxfAIeCWAiopFStm5ZL/2ZLFf93XiL/s7Fo/7++
        d/++unH/vblv/727cf+4umr/lHEm/4ZOCv+dkUX/q6dS/66oSv+po0r/nJlN/49/PP+FOgj/iTwN/6yd
        WP+4tWX/s61T/7GrTKqyrU8Gsq1PAAAAAAAAAAAAAAAAABAQEAC0r14As65dJ7ezY+OYj07/XEMU/5SI
        Tf/Avnj/u7Vn/7awXf+xrFr/rqld/6ytYv+RdSz/g08L/52TS/+mo1r/pJ5S/5uYUv+TkE7/ilcb/4c3
        A/+hfkL/vbx0/7m0ZP+2sVn/trBW47axWCe2sVgAAAAAAAAAAAAAAAAA////ALy3ZgC8t2hRvrlu+raw
        cv+on2j/ubR2/7u2cP+tqGD/op5b/5qXWf+VlFn/lJRT/4NjIP9/Tw3/l5JO/5maXv+Sklj/jo5T/4pq
        Lf+JQwb/mm0u/7u4dP+/u3P/vLdn/7u2Y/+7tmL6u7ZjUbu2YgAAAAAAAAAAAAAAAAD///8AwbxxAMG9
        cXXCvnX/xcF9/8XBgf+5tnb/pqNp/5aUX/+Milf/hH5L/31wOf93Wx//cEYH/3ZKCf+KcC3/jXU0/4tx
        Mf+JYiD/h0kH/5NkIv+wq2P/tbZ2/7aycP+8uG7/wLtv/8C8b//BvG91wbxvAAAAAAAAAAAAAAAAAP//
        /wDGwnwAxsJ8f8XBfP/AvHv/s7B3/56cav+Ae07/a18y/2FNHv9dQhD/Xz8J/2tID/9xTBH/b0YI/4FY
        GP+IXRv/jF0b/49dGv+PWhj/jFQS/49cG/+Zgkn/q6hy/7q3eP/Ev3v/xsF7/8bCfH/GwXwAAAAAAAAA
        AAAAAAAAAAAAAMrHhwDLx4h/yMSH/7y4g/+gnnL/Ylo2/0MzEP9JNQ//Xkof/3lnOf+Yilr/trF9/456
        Qv9wTBL/tq51/8zJlv/NyJj/zsmZ/8zGlv+9rXj/l2gp/4hLC/+ij1v/vLqG/8jEh//Lx4j/zMeIf8vH
        iAAAAAAAAAAAAAAAAAAAAAAAz8yUANDNlHXMyJP/v72Q/3NuTv80KBD/ZVs5/6ahev/HxZ3/1tWt/9va
        sv/Z263/kYBM/2pLFP++uYf/2Ner/9fVqf/Y1qn/2Naq/9jZrf+8sHj/iE0K/5p0O//Fw5T/zsuV/9HN
        lf/RzZV10c2VAAAAAAAAAAAAAAAAAAAAAADV0qEA1dKgUNTRovrFxJv/T0o0/0M8Jf/Dw5r/39+4/93b
        tP/a167/1dKo/83No/+HeEn/YkcV/7CsgP/Dwpr/wb+V/8G+lP/AvpX/w8Oc/7evfv+GUg7/nXY7/9PR
        pf/W06P/1tOh+tbToVDW06EAAAAAAAAAAAAAAAAAAAAAANvYrQDb2Kwn3Nmx49PSrv9QTTv/REAt/8LD
        nv/JyKX/xcOf/8G/nP+8u5r/tLSR/2xbMv9bQxX/p6R8/7Gxkf+qqYr/qaiK/6moif+ppoL/lHpE/31J
        Bv+vlWL/3ty4/9zZsP/b2a3j29irJ9vYqwAAAAAAAAAAAAAAAAAAAAAA3Nq5ANvYtgbh372q4+LD/4WE
        cf8lIRf/c3Fb/6eojf+srJL/rKyS/6eni/99dlb/RTIN/0k0C/9sWi//c2A1/3RfMv94YTH/fGIv/3hX
        Hv9zSAn/kGwz/9XPrf/j4sL/4d+7/+Deuare3LMG3921AAAAAAAAAAAAAAAAAAAAAADd3uMA6OXFAOTi
        x1Ho58z12NfB/2hmWv8pJhz/Ozgq/09KOP9TTjn/S0Iq/0U4HP9qXj//em1M/31tSv+Bb0n/hXFI/4lz
        SP+NdUf/l39S/7Cedv/Z07f/6ejP/+flyP/m5MX15ePDT+XkxADl4sEAAAAAAAAAAAAAAAAAAAAAAPv7
        /wDl480A5ePRDOvp06zu7dj/4+PR/62snv94dmr/Yl5R/2diUv+Ef2z/trOf/+Xl0v/s7Nr/7OzZ/+zr
        2f/s69n/7OvZ/+zr2P/t7Nr/7+/c/+7t2f/s6tP/6+nQ/+rozqro5soL6OfLAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AHZytgDu7dYA7ezZMe/u3Nrx8OD/9PTk//Ly4//v7uD/7+/g//Ly5P/09OX/8vHh//Hw
        4P/x8N//8fDf//Hw3//x8N//8fDf//Dv3v/w793/7+7b/+/u2v/v7dnZ7uzXMO7s1wDu7+AAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDv4QD39uUA8vHhTfPy5OX08+X/9PPm//T05//09Of/9PPm//Tz
        5f/z8uT/8/Lj//Py5P/z8uT/8/Lk//Py4//z8uP/8/Lj//Py4//z8uP/8/Lj5fLx4E308+YA8fHfAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPT05wDv79oB9fXpTPb269r39uz/9/bs//f2
        7P/39uz/9/bs//f27P/39uz/9/bs//f27P/39uz/9/bs//f27P/39uz/9/bs//b269r19elM8uzcAfXz
        5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPn58AD99fsA+fjwL/r5
        8qr6+vP1+vr0//r69P/6+vP/+vrz//r68//6+vP/+vnz//r69P/6+vT/+vr0//r68/X5+fKq+fjwL//8
        /wD4+O8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wD7+/YA/Pv3C/z890/8/Pmp/fz64/39+vr9/fr//f36//39+v/9/fr//f36+v38+uP8/Pmp/Pz4T/z7
        9wv7+/YA/f/+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8A/v78AP7+/Qb+/v0m/v79UP/+/nX//v5///7+f/7+/nX+/v1Q/v79Jv7+
        /Qb9/fwA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////4Af//4AB//8AAP/8AAAP/AAAD/gAAA/wAAAP8AAAD+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfwAAAP8AAAD/gAAB/8AAA//AAAP/8A
        AP//gAH//+AH//////////////////////8=
</value>
  </data>
</root>